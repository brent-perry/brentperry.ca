import { pubsub } from "../pubsub.js";
import { debounce2 } from "../debounce2.js";
import { deepClone, deepFreeze } from "../deep.js";
export function happystate({ state: realState, actions: makeActions, }) {
    let frozenState = deepFreeze(deepClone(realState));
    const actions = makeActions(realState);
    const { publish, subscribe: onStateChange, dispose: clearStateListeners, } = pubsub();
    const change = debounce2(1, publish);
    const augmentedActions = {};
    for (const [key, action] of Object.entries(actions)) {
        augmentedActions[key] = (...args) => {
            action(...args);
            frozenState = deepFreeze(deepClone(realState));
            change();
        };
    }
    return {
        actions: augmentedActions,
        onStateChange,
        clearStateListeners,
        getState: () => frozenState,
    };
}
//# sourceMappingURL=happystate.js.map