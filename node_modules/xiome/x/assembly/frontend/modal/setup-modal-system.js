import { html } from "lit-html";
import { trapFocus } from "./utils/trap-focus.js";
import { preparePrompt } from "./prefabs/prompt.js";
import { prepareConfirm } from "./prefabs/confirm.js";
import { prepareModalSystemRendering } from "./utils/prepare-modal-system-rendering.js";
export function setupModalSystem() {
    let count = 0;
    const modals = new Map();
    const listModals = () => Array.from(modals.values());
    const { rerender, element } = prepareModalSystemRendering(listModals);
    function popup({ focusNthElement, renderContent, onBlanketClick }) {
        const id = count++;
        const controls = {
            rerender,
            close: () => {
                modals.delete(id);
                rerender();
            },
        };
        const top = window.pageYOffset
            ?? document.documentElement.scrollTop
            ?? document.body.scrollTop
            ?? 0;
        const handleBlanketClick = () => onBlanketClick(controls);
        modals.set(id, {
            render() {
                return html `
					<div data-modal="${id}">
						<div data-blanket @click=${handleBlanketClick}></div>
						<div data-plate style="top: ${top}px">
							${renderContent(controls)}
						</div>
					</div>
				`;
            },
        });
        rerender();
        const modal = element.querySelector(`[data-modal="${id}"]`);
        trapFocus(modal, focusNthElement);
        return { controls, modal };
    }
    return {
        modalsElement: element,
        modals: {
            popup,
            confirm: prepareConfirm(popup),
            prompt: preparePrompt(popup),
        },
    };
}
//# sourceMappingURL=setup-modal-system.js.map