import { RoleRow } from "../../../features/auth/tables/types/rows/role-row.js";
import { PublicUserRole } from "../../../features/auth/types/public-user-role.js";
import { PrivilegeRow } from "../../../features/auth/tables/types/rows/privilege-row.js";
import { PermissionsTables } from "../../../features/auth/tables/types/table-groups/permissions-tables.js";
export declare function makePermissionsEngine({ isPlatform, permissionsTables }: {
    isPlatform: boolean;
    permissionsTables: PermissionsTables;
}): {
    getUsersHaveRoles: ({ userIds, onlyGetPublicRoles }: {
        userIds: string[];
        onlyGetPublicRoles: boolean;
    }) => Promise<{
        userId: string;
        userHasRoles: import("../../../features/auth/tables/types/rows/user-has-role-row.js").UserHasRoleRow[];
    }[]>;
    getAnonymousPrivileges: () => Promise<string[]>;
    getPrivilegesForUsers: (userIds: string[]) => Promise<{
        userId: string;
        privileges: string[];
    }[]>;
    getPublicRolesForUsers: (userIds: string[]) => Promise<{
        userId: string;
        publicUserRoles: PublicUserRole[];
    }[]>;
    getPermissionsDisplay: () => Promise<import("../../../toolbox/concurrent.js").AwaitProps<{
        roles: Promise<RoleRow[]>;
        privileges: Promise<PrivilegeRow[]>;
        rolesHavePrivileges: Promise<import("../../../features/auth/tables/types/rows/role-has-privilege-row.js").RoleHasPrivilegeRow[]>;
    }>>;
    getUserPrivileges: (userId: string) => Promise<string[]>;
};
