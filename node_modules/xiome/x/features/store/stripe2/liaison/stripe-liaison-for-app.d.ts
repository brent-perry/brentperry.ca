import { Stripe } from "stripe";
import { LiaisonConnectedOptions } from "../types/liaison-connected-options.js";
export declare function stripeLiaisonConcept({ stripe, connection }: LiaisonConnectedOptions): {
    customers: {
        create(params: Stripe.CustomerCreateParams): Promise<Stripe.Response<Stripe.Customer>>;
        retrieve(id: string): Promise<Stripe.Response<Stripe.Customer | Stripe.DeletedCustomer>>;
        update(id: string, params: Stripe.CustomerUpdateParams): Promise<Stripe.Response<Stripe.Customer>>;
    };
    products: {
        create(params: Stripe.ProductCreateParams): Promise<Stripe.Response<Stripe.Product>>;
        retrieve(id: string): Promise<Stripe.Response<Stripe.Product>>;
        update(id: string, params: Stripe.ProductUpdateParams): Promise<Stripe.Response<Stripe.Product>>;
    };
    prices: {
        create(params: Stripe.PriceCreateParams): Promise<Stripe.Response<Stripe.Price>>;
        retrieve(id: string): Promise<Stripe.Response<Stripe.Price>>;
        update(id: string, params: Stripe.PriceUpdateParams): Promise<Stripe.Response<Stripe.Price>>;
    };
    paymentMethods: {
        retrieve(id: string): Promise<Stripe.Response<Stripe.PaymentMethod>>;
    };
    setupIntents: {
        retrieve(id: string): Promise<Stripe.Response<Stripe.SetupIntent>>;
    };
    subscriptions: {
        retrieve(id: string): Promise<Stripe.Response<Stripe.Subscription>>;
        update(id: string, params: Stripe.SubscriptionUpdateParams): Promise<Stripe.Response<Stripe.Subscription>>;
    };
    checkout: {
        sessions: {
            create(params: Stripe.Checkout.SessionCreateParams): Promise<Stripe.Response<Stripe.Checkout.Session>>;
        };
    };
};
