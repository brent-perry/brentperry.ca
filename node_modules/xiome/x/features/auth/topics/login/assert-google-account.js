import { and } from "../../../../toolbox/dbby/dbby-helpers.js";
import { generateAccountRow } from "./generate-account-row.js";
export async function assertGoogleAccount({ rando, tables, googleResult }) {
    const { googleId, avatar } = googleResult;
    const accountViaGoogle = await tables.accountViaGoogle.one({
        conditions: and({ equal: { googleId } }),
    });
    let account;
    if (accountViaGoogle) {
        account = await tables.account.one({
            conditions: and({ equal: { userId: accountViaGoogle.userId } }),
        });
    }
    else {
        account = generateAccountRow({ rando });
        await Promise.all([
            tables.account.create(account),
            tables.accountViaGoogle.create({
                googleId,
                googleAvatar: avatar,
                userId: account.userId,
            }),
        ]);
    }
    return account;
}
//# sourceMappingURL=assert-google-account.js.map