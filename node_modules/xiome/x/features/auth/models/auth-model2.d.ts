import { Op } from "../../../framework/ops.js";
import { LoginToken } from "../types/tokens/login-token.js";
import { AccessPayload } from "../types/tokens/access-payload.js";
import { AuthModelOptions } from "./types/auth/auth-model-options.js";
export declare function makeAuthModel({ authMediator, loginService }: AuthModelOptions): {
    track: <X>(stakeout: import("../../../toolbox/autowatcher/types/autowatcher-types.js").Stakeout<X>) => () => void;
    readonly access: Op<AccessPayload>;
    onAccessChange: import("../../../toolbox/pubsub.js").Subscribe<import("../mediator/types/access-event-listener.js").AccessEventListener>;
    getValidAccess(): Promise<AccessPayload>;
    useExistingLogin(): Promise<void>;
    sendLoginLink(email: string): Promise<void>;
    login(loginToken: LoginToken): Promise<void>;
    logout(): Promise<void>;
    reauthorize(): Promise<void>;
};
