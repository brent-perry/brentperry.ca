import { Op } from "../../../framework/ops.js";
import { AccessPayload } from "../types/tokens/access-payload.js";
import { PermissionsDisplay } from "../topics/permissions/types/permissions-display.js";
import { PermissionsModelOptions } from "./types/permissions/permissions-model-options.js";
export declare function makePermissionsModel({ permissionsService, reauthorize, }: PermissionsModelOptions): {
    onStateChange: import("../../../toolbox/pubsub.js").Subscribe<import("../../../toolbox/pubsub.js").AnyListener>;
    getState: () => {
        active: boolean;
        access: AccessPayload;
        permissionsDisplay: Op<PermissionsDisplay>;
    };
    initialize: () => Promise<void>;
    getUserCanCustomizePermissions: () => boolean;
    createRole: (args_0: {
        label: string;
    }) => Promise<void>;
    deleteRole: (args_0: {
        roleId: string;
    }) => Promise<void>;
    assignPrivilege: (args_0: {
        roleId: string;
        privilegeId: string;
    }) => Promise<void>;
    unassignPrivilege: (args_0: {
        roleId: string;
        privilegeId: string;
    }) => Promise<void>;
    accessChange(access: AccessPayload): Promise<void>;
};
