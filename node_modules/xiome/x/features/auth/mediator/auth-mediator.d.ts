import { Service } from "../../../types/service.js";
import { greenTopic } from "../topics/green-topic.js";
import { AuthTokens } from "../types/tokens/auth-token.js";
import { AccessPayload } from "../types/tokens/access-payload.js";
import { AccessEventListener } from "./types/access-event-listener.js";
import { FlexStorage } from "../../../toolbox/flex-storage/types/flex-storage.js";
export declare function makeAuthMediator({ appId, storage, greenService, }: {
    appId: string;
    storage: FlexStorage;
    greenService: Service<typeof greenTopic>;
}): {
    subscribeToAccessChange: import("../../../toolbox/pubsub.js").Subscribe<AccessEventListener>;
    subscribeToTokenChange: import("../../../toolbox/pubsub.js").Subscribe<() => void>;
    initialize(): Promise<AccessPayload>;
    getAccess(): Promise<AccessPayload>;
    getAccessToken(): Promise<string>;
    login(tokens: AuthTokens): Promise<AccessPayload>;
    logout(): Promise<AccessPayload>;
    reauthorize(): Promise<AccessPayload>;
};
