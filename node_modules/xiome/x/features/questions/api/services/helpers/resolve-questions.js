import { or } from "../../../../../toolbox/dbby/dbby-helpers.js";
export async function resolveQuestions({ userId, posts, questionsTables }) {
    const ids = posts.map(post => post.questionId);
    const likes = ids.length
        ? await questionsTables.questionLikes.read({
            conditions: or(...ids.map(id => ({ equal: { questionId: id } })))
        })
        : [];
    const reports = ids.length
        ? await questionsTables.questionReports.read({
            conditions: or(...ids.map(id => ({ equal: { questionId: id } })))
        })
        : [];
    return ids.map(id => {
        const questionPost = posts.find(post => post.questionId === id);
        const questionLikes = likes.filter(like => like.questionId === id);
        const questionReports = reports.filter(report => report.questionId === id);
        const userLike = questionLikes.find(like => like.userId === userId);
        const userReport = questionReports.find(report => report.userId === userId);
        return {
            ...questionPost,
            likes: questionLikes.length,
            reports: questionReports.length,
            liked: !!userLike,
            reported: !!userReport,
        };
    });
}
//# sourceMappingURL=resolve-questions.js.map