import { AdministrativeApiOptions } from "./types/administrative-api-options.js";
export declare function makeAdministrativeApi(options: AdministrativeApiOptions): {
    roleAssignmentService: import("renraku/x/types/api/to-api-context").ToApiContext<import("../../auth/policies/types/user-meta.js").UserMeta, import("../../auth/policies/types/user-auth.js").UserAuth, {
        fetchPermissions({ tables, access }: import("../../auth/policies/types/user-auth.js").UserAuth): Promise<import("../../../toolbox/concurrent.js").AwaitProps<{
            roles: Promise<import("../../auth/tables/types/rows/role-row.js").RoleRow[]>;
            privileges: Promise<import("../../auth/tables/types/rows/privilege-row.js").PrivilegeRow[]>;
            rolesHavePrivileges: Promise<import("../../auth/tables/types/rows/role-has-privilege-row.js").RoleHasPrivilegeRow[]>;
        }>>;
        searchUsers({ tables, access }: import("../../auth/policies/types/user-auth.js").UserAuth, options: {
            term: string;
        }): Promise<{
            user: {
                userId: string;
                profile: import("../../auth/types/profile.js").Profile;
                roles: import("../../auth/types/public-user-role.js").PublicUserRole[];
                stats: import("../../auth/types/user-stats.js").UserStats;
            };
            roleIds: string[];
        }[]>;
        assignRoleToUser({ tables }: import("../../auth/policies/types/user-auth.js").UserAuth, options: {
            roleId: string;
            userId: string;
            isPublic: boolean;
            timeframeEnd: number;
            timeframeStart: number;
        }): Promise<void>;
        revokeRoleFromUser({ tables }: import("../../auth/policies/types/user-auth.js").UserAuth, options: {
            roleId: string;
            userId: string;
        }): Promise<void>;
    }, {
        processAuth: (meta: import("../../auth/policies/types/user-meta.js").UserMeta, request: import("renraku/x/types/http/http-request").HttpRequest) => Promise<import("../../auth/policies/types/user-auth.js").UserAuth>;
    }>;
};
