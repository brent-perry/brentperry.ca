export declare const greeterTopic: {
    sayHello(auth: ExampleAuth, name: string): Promise<string>;
    sayGoodbye(auth: ExampleAuth, name: string): Promise<string>;
};
export interface ExampleMeta {
    token: string;
}
export interface ExampleAuth {
    doctorate: boolean;
}
export declare const exampleApi: () => {
    greeter: import("../types/api/to-api-context.js").ToApiContext<ExampleMeta, ExampleAuth, {
        sayHello(auth: ExampleAuth, name: string): Promise<string>;
        sayGoodbye(auth: ExampleAuth, name: string): Promise<string>;
    }, {
        processAuth: (meta: ExampleMeta, request: import("../types/http/http-request.js").HttpRequest) => Promise<{
            doctorate: boolean;
        }>;
    }>;
};
export declare const exampleShape: import("../types/remote/to-shape.js").ToShape<{
    greeter: import("../types/api/to-api-context.js").ToApiContext<ExampleMeta, ExampleAuth, {
        sayHello(auth: ExampleAuth, name: string): Promise<string>;
        sayGoodbye(auth: ExampleAuth, name: string): Promise<string>;
    }, {
        processAuth: (meta: ExampleMeta, request: import("../types/http/http-request.js").HttpRequest) => Promise<{
            doctorate: boolean;
        }>;
    }>;
}>;
